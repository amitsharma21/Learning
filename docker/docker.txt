Commands:
1) docker ps => this command tell us all the running containers in our machine.
2) docker pull <image-name>:<version> => used to pull the images from docker hub to local machine  
   eg: docker pull redis
       docker pull redis:9.6
3) docker images => this tell us all the images present in our local machine
4) docker run <image-name>:<version> => it is used to run image means we started our container
5) ctrl + c => to terminate the container
6) docker run -d <image-name>:<version>  => -d means it will run the image in detached mode means ctrl+c will not be able to terminate the 
                                            container. with this command we get the id of the container. that we can use to terminate the 
                                            cotainer.
7) docker stop <containerId> => used to stop the container
8) docker start <containerId> => used to start the container again that we stopped.
9) docker ps -a => lists all the running and stopped container
10) docker run -p6000:6379 redis:4.6 => computer port 6000 is listening to the givern redis container.
11) docker run --name <custom-name-that-you-want-to-give-your-container> redis:4.6 => by default redis give random name to all containers 
                                                                                      but we can give our custom name to container using 
                                                                                      --name option.
12) docker logs <containerId> => used to check the logs of the container
13) docker exec -it <containerId> /bin/{bash or sh}  => this command is used to open the terminal of container. it is very useful for debugging and checking logs.
14) exit => to exit the terminal we use this command
15) docker run -e <ENV_VARIABLE_NAME>=<ENV_VARIABLE_VALUE> <ImageName>:<Version> => -e options lets us add environment variable while running the 
                                                                                    image.
16) docker network ls => list all the network present inside the host.
17) docker network create <network-name> =>  create network in docker.
18) docker run --net <network-name> <ImageName>:<Version> => way to run the given docker container inside given docker network
19) docker network rm <network-name> => used to delete the docker network

        dockar command with all the above options together 
        
        docker run -d \
        -p6000:6379 \
        --name container-name \
        --net network-name \
        -e variable1=value1 \
        -e variable2=value2 \
        redis:3.4

20) docker compose -f <yaml file name with path> up => used to run the yaml file containers using docker compose. -f means file
21) docker compose -f <yaml file name with path> down => used to stop the yaml file  containers using docker compose.
22) docker rm -f <ContainerId> => it delete/remove the given container permanently from computer
23) docker rmi <image-repository> => it delete/remove the docker image from computer permanently
24) docker build -t <image-name>:<version> <location of docker file in host machine from which we want to create the image> => this command    
                                                                        create the docker image from docker file.
25) docker tag <image name>:<copy image version/tag>  <paste image name>:<paste image version/tag> => this create the new image from existing image